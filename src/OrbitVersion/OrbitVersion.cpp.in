// Copyright (c) 2020 The Orbit Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include <absl/strings/str_format.h>

#include "OrbitVersion/OrbitVersion.h"

#define OrbitVersionStr "@VERSION_STRING@"
#define OrbitCompilerStr "@COMPILER_STRING@"
#define OrbitBuildTimestampStr "@BUILD_TIMESTAMP_STRING@"
#define OrbitBuildMachineStr "@BUILD_MACHINE_STRING@"
#define OrbitBuildOsStr                                    \
  "@BUILD_OS_NAME@ @BUILD_OS_RELEASE@ @BUILD_OS_VERSION@ " \
  "(@BUILD_OS_PLATFORM@)"
#define OrbitCommitHashStr "@COMMIT_HASH@"
#define OrbitMajorVersion @MAJOR_VERSION@
#define OrbitMinorVersion @MINOR_VERSION@

namespace orbit_version {

Version GetVersion() { return {OrbitMajorVersion, OrbitMinorVersion}; }
std::string GetVersionString() { return OrbitVersionStr; }
std::string GetCompiler() { return OrbitCompilerStr; }
std::string GetBuildTimestamp() { return OrbitBuildTimestampStr; }
std::string GetBuildMachine() { return OrbitBuildMachineStr; }
std::string GetBuildOs() { return OrbitBuildOsStr; }
std::string GetCommitHash() { return OrbitCommitHashStr; }

std::string GetBuildReport() {
  std::string result{};

  result += absl::StrFormat("Orbit version %s\n\n", GetVersionString());
  result += absl::StrFormat("Compiler: %s\n", GetCompiler());
  result += absl::StrFormat("Build host: %s\n", GetBuildMachine());
  result += absl::StrFormat("Build time: %s\n", GetBuildTimestamp());
  result += absl::StrFormat("Build OS: %s\n", GetBuildOs());
  result += absl::StrFormat("Commit hash: %s\n", GetCommitHash());

  return result;
}

}  // namespace orbit_version
