[
  # GTest
  { "include": ["@<gtest/.*>", "private", "<gtest/gtest.h>", "public"] },

  # GMock
  { "include": ["@<gmock/.*>", "private", "<gmock/gmock.h>", "public"] },

  # GTE
  { "include": ["<GteVector.inl>", "private", "<GteVector.h>", "public"] },
  { "include": ["<GteVector2.inl>", "private", "<GteVector2.h>", "public"] },
  { "include": ["<GteVector3.inl>", "private", "<GteVector3.h>", "public"] },
  { "include": ["<GteVector4.inl>", "private", "<GteVector4.h>", "public"] },

  # GPRC
  { "include": ["@<grpcpp/impl/.*>", "private", "<grpcpp/grpcpp.h>", "public"] },
  { "include": ["<grpcpp/alarm_impl.h>", "private", "<grpcpp/alarm.h>", "public"] },
  { "include": ["<grpcpp/channel_impl.h>", "private", "<grpcpp/channel.h>", "public"] },
  { "include": ["<grpcpp/completion_queue_impl.h>", "private", "<grpcpp/completion_queue.h>", "public"] },
  { "include": ["<grpcpp/create_channel_impl.h>", "private", "<grpcpp/create_channel.h>", "public"] },
  { "include": ["<grpcpp/create_channel_posix_impl.h>", "private", "<grpcpp/create_channel_posix.h>", "public"] },
  { "include": ["<grpcpp/health_check_service_interface_impl.h>", "private", "<grpcpp/health_check_service_interface.h>", "public"] },
  { "include": ["<grpcpp/opencensus_impl.h>", "private", "<grpcpp/opencensus.h>", "public"] },
  { "include": ["<grpcpp/resource_quota_impl.h>", "private", "<grpcpp/resource_quota.h>", "public"] },
  { "include": ["<grpcpp/server_builder_impl.h>", "private", "<grpcpp/server_builder.h>", "public"] },
  { "include": ["<grpcpp/server_posix_impl.h>", "private", "<grpcpp/server_posix.h>", "public"] },
  { "include": ["<grpcpp/server_impl.h>", "private", "<grpcpp/server.h>", "public"] },

  # Abseil
  { "include": ["\"absl/meta/type_traits.h\"", "private", "<absl/meta/type_traits.h>", "public"] },
  { "include": ["\"absl/hash/hash.h\"", "private", "<absl/hash/hash.h>", "public"] },
  { "include": ["\"absl/hash/hash_testing.h\"", "private", "<absl/hash/hash_testing.h>", "public"] },
  { "include": ["\"absl/debugging/stacktrace.h\"", "private", "<absl/debugging/stacktrace.h>", "public"] },
  { "include": ["\"absl/debugging/leak_check.h\"", "private", "<absl/debugging/leak_check.h>", "public"] },
  { "include": ["\"absl/debugging/failure_signal_handler.h\"", "private", "<absl/debugging/failure_signal_handler.h>", "public"] },
  { "include": ["\"absl/debugging/symbolize.h\"", "private", "<absl/debugging/symbolize.h>", "public"] },
  { "include": ["\"absl/memory/memory.h\"", "private", "<absl/memory/memory.h>", "public"] },
  { "include": ["\"absl/container/btree_map.h\"", "private", "<absl/container/btree_map.h>", "public"] },
  { "include": ["\"absl/container/flat_hash_map.h\"", "private", "<absl/container/flat_hash_map.h>", "public"] },
  { "include": ["\"absl/container/node_hash_set.h\"", "private", "<absl/container/node_hash_set.h>", "public"] },
  { "include": ["\"absl/container/btree_test.h\"", "private", "<absl/container/btree_test.h>", "public"] },
  { "include": ["\"absl/container/flat_hash_set.h\"", "private", "<absl/container/flat_hash_set.h>", "public"] },
  { "include": ["\"absl/container/inlined_vector.h\"", "private", "<absl/container/inlined_vector.h>", "public"] },
  { "include": ["\"absl/container/btree_set.h\"", "private", "<absl/container/btree_set.h>", "public"] },
  { "include": ["\"absl/container/node_hash_map.h\"", "private", "<absl/container/node_hash_map.h>", "public"] },
  { "include": ["\"absl/container/fixed_array.h\"", "private", "<absl/container/fixed_array.h>", "public"] },
  { "include": ["\"absl/flags/usage_config.h\"", "private", "<absl/flags/usage_config.h>", "public"] },
  { "include": ["\"absl/flags/parse.h\"", "private", "<absl/flags/parse.h>", "public"] },
  { "include": ["\"absl/flags/declare.h\"", "private", "<absl/flags/declare.h>", "public"] },
  { "include": ["\"absl/flags/usage.h\"", "private", "<absl/flags/usage.h>", "public"] },
  { "include": ["\"absl/flags/flag.h\"", "private", "<absl/flags/flag.h>", "public"] },
  { "include": ["\"absl/flags/marshalling.h\"", "private", "<absl/flags/marshalling.h>", "public"] },
  { "include": ["\"absl/flags/config.h\"", "private", "<absl/flags/config.h>", "public"] },
  { "include": ["\"absl/synchronization/mutex.h\"", "private", "<absl/synchronization/mutex.h>", "public"] },
  { "include": ["\"absl/synchronization/barrier.h\"", "private", "<absl/synchronization/barrier.h>", "public"] },
  { "include": ["\"absl/synchronization/notification.h\"", "private", "<absl/synchronization/notification.h>", "public"] },
  { "include": ["\"absl/synchronization/blocking_counter.h\"", "private", "<absl/synchronization/blocking_counter.h>", "public"] },
  { "include": ["\"absl/random/distributions.h\"", "private", "<absl/random/distributions.h>", "public"] },
  { "include": ["\"absl/random/beta_distribution.h\"", "private", "<absl/random/beta_distribution.h>", "public"] },
  { "include": ["\"absl/random/bernoulli_distribution.h\"", "private", "<absl/random/bernoulli_distribution.h>", "public"] },
  { "include": ["\"absl/random/mocking_bit_gen.h\"", "private", "<absl/random/mocking_bit_gen.h>", "public"] },
  { "include": ["\"absl/random/gaussian_distribution.h\"", "private", "<absl/random/gaussian_distribution.h>", "public"] },
  { "include": ["\"absl/random/bit_gen_ref.h\"", "private", "<absl/random/bit_gen_ref.h>", "public"] },
  { "include": ["\"absl/random/log_uniform_int_distribution.h\"", "private", "<absl/random/log_uniform_int_distribution.h>", "public"] },
  { "include": ["\"absl/random/random.h\"", "private", "<absl/random/random.h>", "public"] },
  { "include": ["\"absl/random/uniform_int_distribution.h\"", "private", "<absl/random/uniform_int_distribution.h>", "public"] },
  { "include": ["\"absl/random/seed_sequences.h\"", "private", "<absl/random/seed_sequences.h>", "public"] },
  { "include": ["\"absl/random/exponential_distribution.h\"", "private", "<absl/random/exponential_distribution.h>", "public"] },
  { "include": ["\"absl/random/zipf_distribution.h\"", "private", "<absl/random/zipf_distribution.h>", "public"] },
  { "include": ["\"absl/random/seed_gen_exception.h\"", "private", "<absl/random/seed_gen_exception.h>", "public"] },
  { "include": ["\"absl/random/distribution_format_traits.h\"", "private", "<absl/random/distribution_format_traits.h>", "public"] },
  { "include": ["\"absl/random/discrete_distribution.h\"", "private", "<absl/random/discrete_distribution.h>", "public"] },
  { "include": ["\"absl/random/poisson_distribution.h\"", "private", "<absl/random/poisson_distribution.h>", "public"] },
  { "include": ["\"absl/random/mock_distributions.h\"", "private", "<absl/random/mock_distributions.h>", "public"] },
  { "include": ["\"absl/random/uniform_real_distribution.h\"", "private", "<absl/random/uniform_real_distribution.h>", "public"] },
  { "include": ["\"absl/strings/str_replace.h\"", "private", "<absl/strings/str_replace.h>", "public"] },
  { "include": ["\"absl/strings/string_view.h\"", "private", "<absl/strings/string_view.h>", "public"] },
  { "include": ["\"absl/strings/charconv.h\"", "private", "<absl/strings/charconv.h>", "public"] },
  { "include": ["\"absl/strings/str_split.h\"", "private", "<absl/strings/str_split.h>", "public"] },
  { "include": ["\"absl/strings/numbers.h\"", "private", "<absl/strings/numbers.h>", "public"] },
  { "include": ["\"absl/strings/str_join.h\"", "private", "<absl/strings/str_join.h>", "public"] },
  { "include": ["\"absl/strings/ascii.h\"", "private", "<absl/strings/ascii.h>", "public"] },
  { "include": ["\"absl/strings/str_cat.h\"", "private", "<absl/strings/str_cat.h>", "public"] },
  { "include": ["\"absl/strings/str_format.h\"", "private", "<absl/strings/str_format.h>", "public"] },
  { "include": ["\"absl/strings/substitute.h\"", "private", "<absl/strings/substitute.h>", "public"] },
  { "include": ["\"absl/strings/strip.h\"", "private", "<absl/strings/strip.h>", "public"] },
  { "include": ["\"absl/strings/escaping.h\"", "private", "<absl/strings/escaping.h>", "public"] },
  { "include": ["\"absl/strings/match.h\"", "private", "<absl/strings/match.h>", "public"] },
  { "include": ["\"absl/functional/function_ref.h\"", "private", "<absl/functional/function_ref.h>", "public"] },
  { "include": ["\"absl/functional/bind_front.h\"", "private", "<absl/functional/bind_front.h>", "public"] },
  { "include": ["\"absl/algorithm/algorithm.h\"", "private", "<absl/algorithm/algorithm.h>", "public"] },
  { "include": ["\"absl/algorithm/container.h\"", "private", "<absl/algorithm/container.h>", "public"] },
  { "include": ["\"absl/utility/utility.h\"", "private", "<absl/utility/utility.h>", "public"] },
  { "include": ["\"absl/numeric/int128.h\"", "private", "<absl/numeric/int128.h>", "public"] },
  { "include": ["\"absl/time/clock.h\"", "private", "<absl/time/clock.h>", "public"] },
  { "include": ["\"absl/time/civil_time.h\"", "private", "<absl/time/civil_time.h>", "public"] },
  { "include": ["\"absl/time/time.h\"", "private", "<absl/time/time.h>", "public"] },
  { "include": ["\"absl/types/bad_optional_access.h\"", "private", "<absl/types/bad_optional_access.h>", "public"] },
  { "include": ["\"absl/types/compare.h\"", "private", "<absl/types/compare.h>", "public"] },
  { "include": ["\"absl/types/variant.h\"", "private", "<absl/types/variant.h>", "public"] },
  { "include": ["\"absl/types/bad_any_cast.h\"", "private", "<absl/types/bad_any_cast.h>", "public"] },
  { "include": ["\"absl/types/optional.h\"", "private", "<absl/types/optional.h>", "public"] },
  { "include": ["\"absl/types/bad_variant_access.h\"", "private", "<absl/types/bad_variant_access.h>", "public"] },
  { "include": ["\"absl/types/any.h\"", "private", "<absl/types/any.h>", "public"] },
  { "include": ["\"absl/types/span.h\"", "private", "<absl/types/span.h>", "public"] },
  { "include": ["\"absl/base/policy_checks.h\"", "private", "<absl/base/policy_checks.h>", "public"] },
  { "include": ["\"absl/base/casts.h\"", "private", "<absl/base/casts.h>", "public"] },
  { "include": ["\"absl/base/log_severity.h\"", "private", "<absl/base/log_severity.h>", "public"] },
  { "include": ["\"absl/base/macros.h\"", "private", "<absl/base/macros.h>", "public"] },
  { "include": ["\"absl/base/port.h\"", "private", "<absl/base/port.h>", "public"] },
  { "include": ["\"absl/base/options.h\"", "private", "<absl/base/options.h>", "public"] },
  { "include": ["\"absl/base/thread_annotations.h\"", "private", "<absl/base/thread_annotations.h>", "public"] },
  { "include": ["\"absl/base/dynamic_annotations.h\"", "private", "<absl/base/dynamic_annotations.h>", "public"] },
  { "include": ["\"absl/base/optimization.h\"", "private", "<absl/base/optimization.h>", "public"] },
  { "include": ["\"absl/base/const_init.h\"", "private", "<absl/base/const_init.h>", "public"] },
  { "include": ["\"absl/base/attributes.h\"", "private", "<absl/base/attributes.h>", "public"] },
  { "include": ["\"absl/base/call_once.h\"", "private", "<absl/base/call_once.h>", "public"] },
  { "include": ["\"absl/base/config.h\"", "private", "<absl/base/config.h>", "public"] },
  { "symbol":  ["absl::Flag", "private", "<absl/flags/flag.h>", "public"]},

  # Hack: iwyu has a bug. It suggests to include <ext/alloc_traits> whenever std::vector::operator[] is used.
  # <ext/alloc_traits> is an implementation detail of libstdc++.
  # The bug is tracked here: https://github.com/include-what-you-use/include-what-you-use/issues/166
  { "include": ["<ext/alloc_traits.h>", "private", "<vector>", "public"] },

  # ImGUI
  { "include": ["<imgui_internal.h>", "private", "<imgui.h>", "public"] },

  # Qt adjustments - There is an auto-generated mapping file for Qt. Just put adjustments here.
  { "include": ["<QtCore/qglobal.h>", "private", "<QtGlobal>", "public"] },
  { "include": ["<QtCore/qobjectdefs.h>", "private", "<QMetaObject>", "public"] },
  { "include": ["<QtGui/qopengl.h>", "private", "<QOpenGLFunctions>", "public"] },
  { "include": ["<qtestmouse.h>", "private", "<QTest>", "public"] },
  { "include": ["<qtestkeyboard.h>", "private", "<QTest>", "public"] },
  { "include": ["<qtestsupport_core.h>", "private", "<QTest>", "public"] },

  # Vulkan
  { "include": ["@[\"<]vulkan_core\\.h[\">]", "private", "<vulkan/vulkan_core.h>", "public"]},
  { "include": ["@[\"<]vulkan\\.h[\">]", "private", "<vulkan/vulkan.h>", "public"]},
  { "include": ["@[\"<]vk_platform\\.h[\">]", "private", "<vulkan/vk_platform.h>", "public"]},

  # libstdc++
  { "include": ["<bits/exception.h>", "private", "<exception>", "public"]},
  { "include": ["<bits/chrono.h>", "private", "<chrono>", "public"]},
  { "include": ["<bits/utility.h>", "private", "<utility>", "public"]},
  { "include": ["<bits/std_abs.h>", "private", "<cmath>", "public"]},

  # libc
  { "include": ["<bits/types/struct_iovec.h>", "private", "<sys/uio.h>", "public"]},

  # Qt
  { "ref": "qt5_15.imp" },

  # Protobuf
  { "include": ["\"net/proto2/public/repeated_field.h\"", "private", "<google/protobuf/repeated_field.h>", "public"]},
]
